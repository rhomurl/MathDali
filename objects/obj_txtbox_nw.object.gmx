<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rndoff_rnd = irandom(2);
string5 = ""; 
rnd_off = 0; 
rnd_offa = 0; 
rnd_offb = 0; 
rnd_offc = 0; 
rnd_offd = 0;
	n2w_lvl1a = choose("thirty","forty-two","thirty-eight","eight","forty-eight","seventeen","twenty-six","three", "thirty-five","fifty","twenty-eight");

/* if (room == rm_ro_lvl1) 
|| (room == rm_ro_lvl1_1)
|| (room == rm_ro_lvl1_2) 
|| (room == rm_ro_lvl1_3)
|| (room == rm_ro_lvl1_4)
{
    
//}

if (room == n2w_lvl1) || (room == n2w_lvl1_1) || (room == n2w_lvl1_2) || (room == n2w_lvl1_3) || (room == n2w_lvl1_4)
{
	switch (n2w_rnd) 
	{
		case 0: 
		{
			n2w = 83; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 1: 
		{
			n2w = 32; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 2: 
		{
			n2w = 62; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 3: 
		{
			n2w = 75; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 4: 
		{
			n2w = 61; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 5: 
		{
			n2w = 11; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 6: 
		{
			n2w = 68; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}
		case 7: 
		{
			n2w = 29; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 8: 
		{
			n2w = 39; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 8: 
		{
			n2w = 66; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 9: 
		{
			n2w = 84; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 10: 
		{
			n2w = 94; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 11: 
		{
			n2w = 100; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 12: 
		{
			n2w = 73; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 13: 
		{
			n2w = 73; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 14: 
		{
			n2w = 37; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 15: 
		{
			n2w = 52; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 16: 
		{
			n2w = 18; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 17: 
		{
			n2w = 68; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 18: 
		{
			n2w = 24; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 19: 
		{
			n2w = 45; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 20: 
		{
			n2w = 5; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		} 
		case 21: 
		{
			n2w = 39; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}  
		case 22: 
		{
			n2w = 60; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}  
		case 23: 
		{
			n2w = 43; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}  
		case 24: 
		{
			n2w = 69; n2w_a = n2w_lvl1a; n2w_b = n2w_lvl1b; n2w_c = n2w_lvl1c; n2w_d = n2w_lvl1d; break;
		}  
	}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (rndoff_rnd) 
    {
        //This is only a test
        case 0: 
        {
           if (position_meeting(mouse_x, mouse_y, obj_txtbox_roa) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Correct!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rob) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rob) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rob) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            break;
        }
        case 1: 
        {
            if (position_meeting(mouse_x, mouse_y, obj_txtbox_roa) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y,obj_txtbox_rob) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Correct!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_roc) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rod) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            break;
        }
        case 2: 
        {
            if (position_meeting(mouse_x, mouse_y, obj_txtbox_roa) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rob) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_roc) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Incorrect!");
            }
            else if (position_meeting(mouse_x, mouse_y, obj_txtbox_rod) &amp;&amp; mouse_check_button_released(mb_left))
            {
                show_message("Correct!");
            }
            break;
        }
        case 3: 
        {
            rnd_off = 4509873; 
            string5 = "hundred thousands";
            rnd_offa = 4511000;
            rnd_offb = 4000000;
            rnd_offc = 4500000; 
            rnd_offd = 5000000;
            break;
        }
        case 4: 
        {
            rnd_off = 6837145; 
            string5 = "millions";
            rnd_offa = 6800000;
            rnd_offb = 7000000; 
            rnd_offc = 6000000;
            rnd_offd = 6840000;
            break;
        }
        default: 
        {
            string5 = ""; rnd_off = rnd_offa = rnd_offb = rnd_offc = rnd_offd = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
