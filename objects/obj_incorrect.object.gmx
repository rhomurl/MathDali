<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ans_incorrect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(obj_textbox);
instance_deactivate_object(obj_button_w2n);
instance_deactivate_object(obj_drawquestion_w2n);
instance_deactivate_object(obj_lives);
// Deactivate elements
instance_deactivate_object(obj_roundoff_question);
instance_deactivate_object(obj_pv_question);
instance_deactivate_object(obj_nw_question);
//Deac textbox and choose
instance_deactivate_object(obj_txtbox_a);
instance_deactivate_object(obj_txtbox_b);
instance_deactivate_object(obj_txtbox_c);
instance_deactivate_object(obj_txtbox_d);
instance_deactivate_object(obj_choosea);
instance_deactivate_object(obj_chooseb);
instance_deactivate_object(obj_choosec);
instance_deactivate_object(obj_choosed);

keyboard_string = ""; 

//Level 1 - Numbers to Words
if (room == rm_n2w_lvl1) || (room == rm_n2w_lvl1_1) || 
(room ==  rm_n2w_lvl1_2) || (room == rm_n2w_lvl1_3) || (room == rm_n2w_lvl1_4)
{
n2w_rnd1 = obj_txtbox_nw.n2w_rnd;
n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = "";
    switch (n2w_rnd1) 
    {
        case 0: 
        {
        n2w_a = "eighty-three"; /*correct*/ break;
        }
        case 1: 
        {
        n2w_d = "thirty-two"; /*correct*/ break;
        }
        case 2: 
        {
        n2w_b = "sixty-two"; /*correct*/  break;
        }
        case 3: 
        {
        n2w_b = "seventy-five"; /*correct*/ break;
        }
        case 4: 
        {
        n2w_d = "sixty-one"; /*correct*/ break;
        }
        case 5: 
        {
        n2w_c = "eleven"; /*correct*/  break;
        }
        case 6: 
        {
        n2w_d = "sixty-eight"; /*correct*/ break;
        }
        case 7: 
        {
        n2w_a = "twenty-nine"; /*correct*/break;
        } 
        case 8: 
        {
        n2w_b = "sixty-six"; /*correct*/ break;
        } 
        case 9: 
        {
        n2w_c = "eighty-four"; /*correct*/ break;
        } 
        case 10: 
        {
        n2w_a = "ninety-four"; /*correct*/ break;
        } 
        case 11: 
        {
        n2w_b = "one hundred"; /*correct*/ break;
        } 
        case 12: 
        {
        n2w_c = "seventy-three"; /*correct*/ break;
        } 
        case 13: 
        {
        n2w_d = "seventy-seven"; /*correct*/ break;
        } 
        case 14: 
        {
        n2w_a = "thirty-seven"; /*correct*/ break;
        } 
        case 15: 
        {
        n2w_b = "fifty-two"; /*correct*/ break;
        } 
        case 16: 
        {
        n2w_c = "eighteen"; /*correct*/ break;
        } 
        case 17: 
        {
        n2w_d = "sixty-eight"; /*correct*/ break;
        } 
        case 18: 
        {
        n2w_a = "twenty-four"; /*correct*/ break;
        } 
        case 19: 
        {
        n2w_b = "forty-five"; /*correct*/ break;
        } 
        case 20: 
        {
        n2w_c = "five"; /*correct*/ break;
        } 
        case 21: 
        {
        n2w_d = "thirty-nine"; /*correct*/ break;
        }  
        case 22: 
        {
        n2w_a = "sixty"; /*correct*/ break;
        }  
        case 23: 
        {
        n2w_b = "forty-three"; /*correct*/ break;
        }  
        case 24: 
        {
        n2w_c = "sixty-nine"; /*correct*/ break;
        }  
        default: 
        {
        n2w = 0; n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = ""; break;
        }
    }
}
//LVL2
if (room == rm_n2w_lvl2) || (room == rm_n2w_lvl2_1) || (room == rm_n2w_lvl2_2) || (room == rm_n2w_lvl2_3) || (room == rm_n2w_lvl2_4)
{
n2w_rnd1 = obj_txtbox_nw.n2w_rnd;
n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = "";
    switch (n2w_rnd1) 
    {
        case 0: 
        {
        n2w_a = "eight thousand three#hundred sixty"; /*correct*/; break;
        }
        case 1: 
        {
        n2w_b = "three hundred#twenty-nine"; /*correct*/ break;
        }
        case 2: 
        {
        n2w_c = "nine thousand four#hundred seventy-eight"; /*correct*/ break;
        }
        case 3: 
        {
        n2w_d = "eight thousand one#hundred seventy-seven"; /*correct*/ break;
        }
        case 4: 
        {
        n2w_a = "one thousand four#hundred eighty-eight"; /*correct*/ break;
        }
        case 5: 
        {
        n2w_b = "four thousand one#hundred four"; /*correct*/ break;
        }
        case 6: 
        {
        n2w_c = "four hundred#thirty-eight"; /*correct*/ break;
        }
        case 7: 
        {
        n2w_d = "two thousand nine#hundred fifty-nine"; /*correct*/ break;
        } 
        case 8: 
        {
        n2w_a = "eight thousand eight#hundred forty-two"; /*correct*/ break;
        }  
        case 9: 
        {
        n2w_c = "one thousand one#hundred forty-six"; /*correct*/ break;
        } 
        case 10: 
        {
        n2w_d = "nine hundred#fifty-one"; /*correct*/ break;
        } 
        case 11: 
        {
        n2w_a = "two thousand seven#hundred fifty-nine"; /*correct*/  break;
        } 
        case 12: 
        {
        n2w_b = "seven thousand eight#hundred eighty-six"; /*correct*/ break;
        } 
        case 13: 
        {
        n2w_c = "one thousand one#hundred thirteen"; /*correct*/ break;
        } 
        case 14: 
        {
        n2w_d = "six thousand five#hundred eleven"; /*correct*/ break;
        } 
        case 15: 
        {
        n2w_a = "seven thousand eighteen "; /*correct*/ break;
        } 
        case 16: 
        {
        n2w_b = "four thousand#thirty-seven"; /*correct*/ break;
        } 
        case 17: 
        {
        n2w_c = "four thousand two#hundred seventy-five"; /*correct*/ break;
        } 
        case 18: 
        {
        n2w_d = "five thousand seven#hundred twenty-three"; /*correct*/ break;
        } 
        case 19: 
        {
        n2w_a = "three thousand seven#hundred seventy-one"; /*correct*/ break;
        } 
        case 20: 
        {
        n2w_b = "five thousand eight#hundred fifty-five"; /*correct*/ break;
        } 
        case 21: 
        {
        n2w_c = "six thousand six#hundred forty-four"; /*correct*/ break;
        }  
        case 22: 
        {
        n2w_d = "eight thousand one#hundred fifty-four"; /*correct*/ break;
        }  
        case 23: 
        {
        n2w_a = "nine thousand three#hundred eighty-seven"; /*correct*/ break;
        }  
        case 24: 
        {
         n2w_b = "seven hundred#eighty-eight"; /*correct*/ break;
        }  
    }
}

//LVL3
if (room == rm_n2w_lvl3) || (room == rm_n2w_lvl3_1) || (room == rm_n2w_lvl3_2) || (room == rm_n2w_lvl3_3) || (room == rm_n2w_lvl3_4)
{
n2w_rnd1 = obj_txtbox_nw.n2w_rnd;
n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = "";
    switch (n2w_rnd1) 
    {
        case 0: 
        {
        n2w_d = "eighty-two thousand#three hundred ninety-one"; /*correct*/ break;
        }
        case 1: 
        {
        n2w_c = "forty-nine thousand#three hundred eighteen" ; /*correct*/ break;
        }
        case 2: 
        {
        n2w_d = "sixty-seven thousand#seven hundred sixty-seven"; /*correct*/ break;
        }
        case 3: 
        {
        n2w_a = "seventy-eight thousand#one hundred five"; /*correct*/ break;
        }
        case 4: 
        {
        n2w_c = "ninety-nine thousand#four hundred forty-four" ; /*correct*/ break;
        }
        case 5: 
        {
        n2w_b = "ninety-nine thousand#nine hundred forty-seven"; /*correct*/  break;
        }
        case 6: 
        {
        n2w_d = "sixty-two thousand fifty"; /*correct*/ break;
        }
        case 7: 
        {
        n2w_b = "thirty-five thousand#five hundred fourteen";/*correct*/ break;
        } 
        case 8: 
        {
        n2w_d = "fifty thousand nine#hundred ten"; /*correct*/ break;
        } 
        case 9: 
        {
        n2w_a = "ninety-three#thousand forty" ; /*correct*/ break;
        } 
        case 10: 
        { 
        n2w_d = "thirty-five thousand#nine hundred fifty"; /*correct*/  break;
        } 
        case 11: 
        {
        n2w_a = "ninety-nine thousand#nine hundred fifty-one"; /*correct*/  break;
        } 
        case 12: 
        {
        n2w_d = "eighty-five thousand#six hundred twenty"; /*correct*/ break;
        } 
        case 13: 
        {
        n2w_c = "fifty-five thousand#two hundred sixty-six";/*correct*/ break;
         } 
        case 14: 
        {
        n2w_a = "eighty-seven thousand#sixty-four"; /*correct*/ break;
        } 
        case 15: 
        {
        n2w_d = "twenty-nine thousand#five hundred ninety-six"; /*correct*/ break;
        } 
        case 16: 
        {
        n2w_b = "forty-one thousand#five hundred seventy-five"; /*correct*/ break;
        } 
        case 17: 
        {
        n2w_c = "eighty-eight#thousand ten"; /*correct*/ break;
        } 
        case 18: 
        {
        n2w_b = "forty-seven thousand#nine hundred seventy-nine"; /*correct*/ break;
        } 
        case 19: 
        {
        n2w_d = "fifty-one thousand#nine hundred ninety-five";  /*correct*/ break;
        } 
        case 20: 
        {
        n2w_a = "fifty-one thousand#four hundred thirty-seven"; /*correct*/ break;
        } 
        case 21: 
        {
         n2w_d = "seventy-six thousand#seven hundred two"; /*correct*/ break;
        }  
        case 22: 
        {
        n2w_b = "twenty-six thousand#seven hundred seventy-six"; /*correct*/ break;
        }  
        case 23: 
        {
        n2w_b = "seventy thousand five#hundred twenty-five"; /*correct*/ break;
        }  
        case 24: 
        {
        n2w_b = "eighty-two thousand#one hundred forty-three";/*correct*/ break;
        }  
    }
}


//LVL4
if (room == rm_n2w_lvl4) || (room == rm_n2w_lvl4_1) || (room == rm_n2w_lvl4_2) || (room == rm_n2w_lvl4_3) || (room == rm_n2w_lvl4_4)
{
n2w_rnd1 = obj_txtbox_nw.n2w_rnd;
n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = "";
    switch (n2w_rnd1) 
    {
        case 0: 
        {
        n2w_a = "two hundred thirty-five#thousand four hundred#eight"; /*correct*/ break;
        }
        case 1: 
        {
        n2w_b = "three hundred eleven#thousand nine hundred#seventy"; /*correct*/ break;
        }
        case 2: 
        {
        n2w_c = "one hundred forty-one#thousand seven hundred#eighty" ;/*correct*/ break;
        }
        case 3: 
        {
        n2w_a = "two hundred eleven#thousand five hundred#ninety-one"; /*correct*/ break;
        }
        case 4: 
        {
        n2w_d = "four hundred sixty-two#thousand six hundred#twenty-three"; /*correct*/  break;
        }
        case 5: 
        {
        n2w_d = "one hundred thirty#thousand three hundred#seventy-two"; /*correct*/  break;
        }
        case 6: 
        {
        n2w_a = "one hundred four#thousand thirty-five"; /*correct*/ break;
        }
        case 7: 
        {
        n2w_b = "one hundred twelve#thousand five hundred#eighty-two"; /*correct*/ break;
        } 
        case 8: 
        {
        n2w_c = "three hundred thirty-five#thousand ninety-two" ;/*correct*/ break;
        } 
        case 9: 
        {
        n2w_a = "one hundred seventy-seven#thousand five hundred#fifteen" ;/*correct*/ break;
        } 
        case 10: 
        {
        n2w_b = "two hundred fifteen$thousand three hundred$two" ;/*correct*/ break;
        } 
        case 11: 
        {
        n2w_b = "four hundred eighteen#thousand seven hundred#seventy-one";/*correct*/ break;
        } 
        case 12: 
        {
        n2w_c = "three hundred ninety-six#thousand eight hundred#twelve ";/*correct*/break;
        } 
        case 13: 
        {
        n2w_d = "four hundred forty#thousand nine hundred#fifty-eight";/*correct*/ break;
        } 
        case 14: 
        {
        n2w_a = "four hundred six#thousand seventy-four";/*correct*/ break;
        } 
        case 15: 
        {
        n2w_b = "three hundred ninety#thousand three hundred#twenty-eight"; /*correct*/ break;
        } 
        case 16: 
        {
        n2w_c = "two hundred thirty-eight#thousand fifty-two";/*correct*/ break;
        } 
        case 17: 
        {
        n2w_d = "one hundred twenty-four#thousand four hundred#seven";/*correct*/ break;
        } 
        case 18: 
        {
        n2w_a = "two hundred twenty-eight#thousand eight hundred#eighty-seven";/*correct*/ break;
        } 
        case 19: 
        {
         n2w_b = "one hundred#eighty-four thousand#seventy";/*correct*/ break;
        } 
        case 20: 
        {
        n2w_c = "one hundred two thousand#seven hundred#seventy-two";/*correct*/ break;
        } 
        case 21: 
        {
        n2w_a = "one hundred twenty-eight#thousand seven hundred#twenty-seven";/*correct*/ ; break;
        }  
        case 22: 
        {
        n2w_d = "one hundred eight#thousand one hundred#three";/*correct*/ break;
        }  
        case 23: 
        {
        n2w_a = "three hundred#ninety-four thousand#ninety-four";/*correct*/ break;
        }  
        case 24: 
        {
        n2w_b = "two hundred#thirty-two thousand#eight hundred thirteen";/*correct*/ break;
        }  
    }
}


//LVL 5
if (room == rm_n2w_lvl5) || (room == rm_n2w_lvl5_1) || (room == rm_n2w_lvl5_2) || (room == rm_n2w_lvl5_3) || (room == rm_n2w_lvl5_4)
{
n2w_rnd1 = obj_txtbox_nw.n2w_rnd;
n2w_a = ""; n2w_b = ""; n2w_c = ""; n2w_d = "";
    switch (n2w_rnd1) 
    {
        case 0: 
        {
        n2w_a = "eight million five#hundred seventy-two#thousand nine hundred#thirty-two";  /*correct*/ break;
        }
        case 1: 
        {
        n2w_a = "four million three#hundred eighty thousand#one hundred ten"; /*correct*/ break;
        }
        case 2: 
        {
        n2w_b = "seven million two#hundred seventy-three#thousand two hundred#seventy-two"; /*correct*/; break;
        }
        case 3: 
        {
        n2w_b = "nine million one#hundred ninety-two#thousand nine hundred#eighty-eight" ;/*correct*/ break;
        }
        case 4: 
        {
        n2w_c = "nine million#thirty-seven thousand#four hundred sixty-four"; /*correct*/break;
        }
        case 5: 
        {
        n2w_d = "six hundred#seventy-four thousand#four hundred ninety-nine"; /*correct*/ break;
        }
        case 6: 
        {
        n2w_a = "three million seven#hundred nine thousand#three hundred fifty-nine";/*correct*/ break;
        }
        case 7: 
        {
        n2w_b = "six million nine#hundred thirteen thousand#three hundred eight"; /*correct*/ break;
        } 
        case 8: 
        {
        n2w_c = "two million six#hundred forty-two#thousand six hundred#twenty";/*correct*/break;
        } 
        case 9: 
        {
        n2w_a = "six million#twenty-nine thousand#seven hundred ninety-two";/*correct*/ break;
        } 
        case 10: 
        {
        n2w_b = "three million three#hundred nine thousand#four hundred thirty-seven";/*correct*/ break;
        } 
        case 11: 
        {
        n2w_c = "four million five#hundred fifty thousand#two hundred fifty-six";/*correct*/ break;
        } 
        case 12: 
        {
        n2w_d = "eight hundred forty#thousand two hundred#thirty-six"; /*correct*/ break;
        } 
        case 13: 
        {
        n2w_a = "seven million four#hundred nine thousand#three hundred seventeen"; /*correct*/ break;
        } 
        case 14: 
        {
        n2w_b = "nine million eight#hundred twenty-seven#thousand two hundred#six"; /*correct*/ break;
        } 
        case 15: 
        {
        n2w_c = "seven hundred one#thousand two hundred#ninety-one"; /*correct*/ break;
        } 
        case 16: 
        {
        n2w_d = "eight million one#hundred twelve thousand#one hundred eighty-seven"; /*correct*/ break;
        } 
        case 17: 
        {
        n2w_a = "two million one#hundred seventy-seven#thousand two hundred#forty-nine"; /*correct*/ break;
        } 
        case 18: 
        {
        n2w_b = "seven million thirteen#thousand six hundred#twenty-two"; /*correct*/ break;
        } 
        case 19: 
        {
        n2w_d = "four million four#hundred ninety-one#thousand five hundred#sixty-seven"; /*correct*/ break;
        } 
        case 20: 
        {
        n2w_a = "four million nine#hundred eighty-two#thousand twenty-nine"; /*correct*/ break;
        } 
        case 21: 
        {
        n2w_a = "four million nine#hundred eighty-two#thousand twenty-nine"; /*correct*/ break;
        }  
        case 22: 
        {
        n2w_a = "six million two hundred#sixty-one thousand#six hundred forty-eight"; /*correct*/ break;
        }  
        case 23: 
        {
        n2w_c = "five million seven#hundred seventy-four#thousand three hundred#fifty-nine";/*correct*/break;
        }  
        case 24: 
        {
        n2w_b = "five million eight#hundred fifty-three#thousand five hundred# fifty-nine";/*correct*/ break;
        }  
    }
}
//END NUMBERS TO WORDS

////////////
//Level 1 - Place Value
if (room == rm_pv_lvl1) || (room == rm_pv_lvl1_1) || (room == rm_pv_lvl1_2) || (room == rm_pv_lvl1_3) || (room == rm_pv_lvl1_4)
{
rnd_pv1 = obj_txtbox_pv.rnd_pv;
pv_a = ""; pv_b = ""; pv_c = ""; pv_d = "";
    switch(rnd_pv1)
    {
        case 0:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 1:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 2:
        {
        pv_c = "thousands"; //Answer
        break;
        }
        case 3:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 4:
        {
        pv_c = "thousands"; //Answer
        break;
        }
        case 5:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 6:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 7:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 8:
        {
        pv_a = "hundreds"; //Answer 
        break;
        }
        case 9:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 10:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 11:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 12:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 13:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 14:
        {
        num_pv = 618;
        pv_b = "ones"; //Answer
        break;
        }
        case 15:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 16:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 17:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 18:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 19:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 20:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 21:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 22:
        {
        pv_a = "hundreds"; //Answer 
        break;
        }
        case 23:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 24:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
    }
}

//Level 2 - Place Value
if (room == rm_pv_lvl2) || (room == rm_pv_lvl2_1) || (room == rm_pv_lvl2_2) || (room == rm_pv_lvl2_3) || (room == rm_pv_lvl2_4)
{
rnd_pv1 = obj_txtbox_pv.rnd_pv;
pv_a = ""; pv_b = ""; pv_c = ""; pv_d = "";
    switch(rnd_pv1)
    {
        case 0:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 1:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 2:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 3:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 4:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 5:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 6:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 7:
        {
        pv_b = "hundreds"; //Answer
        break;
        }
        case 8:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 9:
        {
        pv_a = "thousands";
        pv_b = "ones"; //Answer
        break;
        }
        case 10:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 11:
        { 
        pv_c = "hundreds"; //Answer
        break;
        }
        case 12:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 13:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 14:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 15:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 16:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 17:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 18:
        {
        pv_c = "hundreds"; //Answer
        break;
        }
        case 19:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 20:
        {
        pv_a = "thousands"; //Answer
        break;
        }
        case 21:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 22:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 23:
        {
        pv_a = "hundred thousands"; //Answer
        break;
        }
        case 24:
        {
        pv_a = "thousands"; //Answer
        break;
        }
    }
}

//Level 3 - Place Value
if (room == rm_pv_lvl3) || (room == rm_pv_lvl3_1) || (room == rm_pv_lvl3_2) || (room == rm_pv_lvl3_3) || (room == rm_pv_lvl3_4)
{
rnd_pv1 = obj_txtbox_pv.rnd_pv;
pv_a = ""; pv_b = ""; pv_c = ""; pv_d = "";
    switch(rnd_pv1)
    {
        case 0:
        {
        pv_b = "ten thousands"; //Answer
        break;
        }
        case 1:
        {
        pv_a = "hundred thousands"; //Answer
        break;
        }
        case 2:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 3:
        {
        pv_b = "hundreds"; //Answer
        break;
        }
        case 4:
        { 
        pv_b = "ten thousands"; //Answer
        break;
        }
        case 5:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 6:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 7:
        {
        pv_b = "thousands"; //Answer
        break;
        }
        case 8:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 9:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 10:
        {
        pv_a = "hundreds"; //Answer
        break;
        }
        case 11:
        {
        pv_b = "thousands"; //Answer
        break;
        }
        case 12:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 13:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 14:
        {
        pv_b = "thousandths"; //Answer
        break;
        }
        case 15:
        {
        pv_b = "thousandths"; //Answer
        break;
        }
        case 16:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 17:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 18:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 19:
        {
        pv_c = "tenths"; //Answer 
        break;
        }
        case 20:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 21:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 22:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 23:
        {
        pv_d = "thousandths"; //Answer
        break;
        }
        case 24:
        {
        pv_d = "thousandths"; //Answer
        break;
        }
    }
}

//Level 4 - Place Value
if (room == rm_pv_lvl4) || (room == rm_pv_lvl4_1) || (room == rm_pv_lvl4_2) || (room == rm_pv_lvl4_3) || (room == rm_pv_lvl4_4)
{
rnd_pv1 = obj_txtbox_pv.rnd_pv;
pv_a = ""; pv_b = ""; pv_c = ""; pv_d = "";
    switch(rnd_pv1)
    {
        case 0:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 1:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 2:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 3:
        {
        pv_c = "thousands"; //Answer
        break;
        }
        case 4:
        {
        pv_c = "thousandths"; //Answer
        break;
        }
        case 5:
        {
        pv_c = "hundred thousands"; //Answer
        break;
        }
        case 6:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 7:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 8:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 9:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 10:
        {
        pv_c = "thousandths"; //Answer
        break;
        }
        case 11:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 12:
        {
        pv_c = "ten thousandths"; //Answer
        break;
        }
        case 13:
        {
        pv_c = "ten thousandths"; //Answer
        break;
        }
        case 14:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 15:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 16:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 17:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 18:
        {
        pv_c = "ten thousandths"; //Answer
        break;
        }
        case 19:
        {
        pv_d = "tens"; //Answer
        break;
        }
        case 20:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 21:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 22:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 23:
        {
        pv_c = "thousandths"; //Answer
        break;
        }
        case 24:
        {
        pv_c = "hundredths"; //Answer
        break;
        }
    }
}

//Level 5 - Place Value
if (room == rm_pv_lvl5) || (room == rm_pv_lvl5_1) || (room == rm_pv_lvl5_2) || (room == rm_pv_lvl5_3) || (room == rm_pv_lvl5_4)
{
rnd_pv1 = obj_txtbox_pv.rnd_pv;
pv_a = ""; pv_b = ""; pv_c = ""; pv_d = "";
    switch(rnd_pv1)
    {
        case 0:
        { 
        pv_c = "tenths"; //Answer
        break;
        }
        case 1:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 2:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 3:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 4:
        {
        pv_c = "thousandths"; //Answer
        break;
        }
        case 5:
        {
        pv_c = "thousandths"; //Answer
        break;
        }
        case 6:
        { 
        pv_b = "ten thousandths"; //Answer
        break;
        }
        case 7:
        { 
        pv_c = "thousandths"; //Answer
        break;
        }
        case 8:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 9:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 10:
        {
        pv_a = "hundredths"; //Answer
        break;
        }
        case 11:
        { 
        pv_c = "ten thousandths"; //Answer
        break;
        }
        case 12:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 13:
        {
        pv_c = "ten thousandths"; //Answer
        break;
        }
        case 14:
        {
        pv_c = "tenths"; //Answer
        break;
        }
        case 15:
        {
        pv_a = "hundred thousands"; //Answer
        break;
        }
        case 16:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 17:
        {
        pv_b = "ones"; //Answer
        break;
        }
        case 18:
        {
        pv_c = "millions"; //Answer
        break;
        }
        case 19:
        {
        pv_a = "hundred millions"; //Answer
        break;
        }
        case 20:
        {
        pv_c = "ten millions"; //Answer
        break;
        }
        case 21:
        {
        pv_a = "hundred thousands"; //Answer
        break;
        }
        case 22:
        {
        pv_c = "millions"; //Answer
        break;
        }
        case 23:
        {
        pv_b = "ten thousands"; //Answer
        break;
        }
        case 24:
        {
        pv_d = "hundred thousands"; //Answer
        break;
        }
    }
}
////END PLACE VALUE ///


//Level 1 - Round Off
if (room == rm_ro_lvl1) || (room == rm_ro_lvl1_1) || (room == rm_ro_lvl1_2) || (room == rm_ro_lvl1_3) || (room == rm_ro_lvl1_4)
{
rnd_ro1 = obj_txtbox_ro.rnd_ro;
rnd_offa = 0; rnd_offb = 0; rnd_offc = 0; rnd_offd = 0;
    switch (rnd_ro1) 
    {
        case 0: { rnd_off = 149.20;   rnd_offb = 150.00 ; /*answer*/ break; }
        case 1: { rnd_off = 102.45;   rnd_offd = 102.50; /*answer*/ break; }
        case 2: { rnd_off = 473.33;   rnd_offa = 500.00; /*answer*/ break; }
        case 3: { rnd_off = 116.50;   rnd_offd = 117.00; /*answer*/ break; }
        case 4: { rnd_off = 489.959;  rnd_offc = 489.960; /*answer*/ break; }
        case 5: { rnd_off = 363;   rnd_offd = 400; /*answer*/ break; }
        case 6: { rnd_off = 246;   rnd_offc = 250; /*answer*/ break; }
        case 7: { rnd_off = 435;   rnd_offa = 400; /*answer*/ break; }
        case 8: { rnd_off = 359;   rnd_offd = 360; /*answer*/ break; }
        case 9: { rnd_off = 127;   rnd_offd = 100; /*answer*/ break; }
        case 10: { rnd_off = 904;   rnd_offd = 1000; break; }
        case 11: { rnd_off = 920;   rnd_offb = 920; /*answer*/ break; }
        case 12: { rnd_off = 409;   rnd_offc = 410; /*answer*/ break; }
        case 13: { rnd_off = 646;   rnd_offd = 600; /*answer*/ break; }
        case 14: { rnd_off = 444;   rnd_offa = 440; /*answer*/ break; }
        case 15: { rnd_off = 123;   rnd_offa = 100; /*answer*/ break; }
        case 16: { rnd_off = 321;   rnd_offa = 300; /*answer*/ break; }
        case 17: { rnd_off = 21;   rnd_offb = 20; /*answer*/ break; }
        case 18: { rnd_off = 64;   rnd_offa = 60; /*answer*/ break; }
        case 19: { rnd_off = 94;   rnd_offb = 90; /*answer*/ break; }
    }
}
//Level 2
if (room == rm_ro_lvl2) || (room == rm_ro_lvl2_1) || (room == rm_ro_lvl2_2) || (room == rm_ro_lvl2_3) || (room == rm_ro_lvl2_4)
{
rnd_ro1 = obj_txtbox_ro.rnd_ro;
rnd_offa = 0; rnd_offb = 0; rnd_offc = 0; rnd_offd = 0;
    switch (rnd_ro1) 
    {
        case 0: { rnd_off = 4147;   rnd_offb = 4100;/*answer*/ break; }
        case 1: { rnd_off = 2351;   rnd_offb = 2350; /*answer*/ break; }
        case 2: { rnd_off = 2097;   rnd_offa = 2100;/*answer*/ break; }
        case 3: { rnd_off = 4996;   rnd_offa = 5000;/*answer*/ break; }
        case 4: { rnd_off = 4183;   rnd_offd = 4000;/*answer*/ break; }
        case 5: { rnd_off = 1524;   rnd_offd = 2520; break; }
        case 6: { rnd_off = 4766;   rnd_offc = 5000;/*answer*/ break; }
        case 7: { rnd_off = 2894;   rnd_offb = 2890; /*answer*/ break; }
        case 8: { rnd_off = 1535;   rnd_offd = 1540;/*answer*/ break; }
        case 9: { rnd_off = 5334;   rnd_offa = 5300;/*answer*/ break; }
        case 10: { rnd_off = 1172;   rnd_offc = 1200;/*answer*/ break; }
        case 11: { rnd_off = 1260;   rnd_offd = 1200;/*answer*/ break; }
        case 12: { rnd_off = 2558;   rnd_offa = 2500;/*answer*/ break; }
        case 13: { rnd_off = 3476;   rnd_offb = 3400; /*answer*/ break; }
        case 14: { rnd_off = 3586;   rnd_offc = 4000;/*answer*/ break; }
        case 15: { rnd_off = 2921;   rnd_offd = 2900;/*answer*/ break; }
        case 16: { rnd_off = 2224;   rnd_offb = 2220; /*answer*/ break; }
        case 17: { rnd_off = 3981;   rnd_offd = 3980;/*answer*/ break; }
        case 18: { rnd_off = 1933;   rnd_offa = 2000 ;/*answer*/ break; }
        case 19: { rnd_off = 3576;   rnd_offc = 4000;/*answer*/ break;}
    }
}


//Level 3
if (room == rm_ro_lvl3) || (room == rm_ro_lvl3_1) || (room == rm_ro_lvl3_2) || (room == rm_ro_lvl3_3) || (room == rm_ro_lvl3_4)
{
rnd_ro1 = obj_txtbox_ro.rnd_ro;
rnd_offa = 0; rnd_offb = 0; rnd_offc = 0; rnd_offd = 0;
    switch (rnd_ro1) 
    {
        case 0: { rnd_off = 40818;   rnd_offb = 40800; /*answer*/ break; }
        case 1: { rnd_off = 34866;   rnd_offb = 34870; /*answer*/ break; }
        case 2: { rnd_off = 24977;   rnd_offa = 25000;/*answer*/ break; }
        case 3: { rnd_off = 7996;   rnd_offa = 8000;/*answer*/ break; }
        case 4: { rnd_off = 23845;   rnd_offd = 24000;/*answer*/ break; }
        case 5: { rnd_off = 45260;   rnd_offc = 45000;/*answer*/ break; }
        case 6: { rnd_off =38169;   rnd_offc = 38000;/*answer*/ break; }
        case 7: { rnd_off = 9374;   rnd_offb = 9370; /*answer*/ break; }
        case 8: { rnd_off = 11923;   rnd_offd = 11920;/*answer*/ break; }
        case 9: { rnd_off = 27438;   rnd_offa = 27400;/*answer*/ break; }
        case 10: { rnd_off = 42407;   rnd_offc = 42400;/*answer*/ break; }
        case 11: { rnd_off = 20399;   rnd_offd = 20400;/*answer*/ break; }
        case 12: { rnd_off = 28860;   rnd_offa = 28860;/*answer*/ break; }
        case 13: { rnd_off = 17912;   rnd_offb = 18000; /*answer*/ break; }
        case 14: { rnd_off = 44551;   rnd_offc = 40000;/*answer*/ break; }
        case 15: { rnd_off = 25301;   rnd_offa = 30000; /*answer*/ break; }
        case 16: { rnd_off = 49329;   rnd_offb = 49300; /*answer*/ break; }
        case 17: { rnd_off = 48186;   rnd_offb = 48000; /*answer*/ break; }
        case 18: { rnd_off = 30935;   rnd_offc = 31000; /*answer*/ break; }
        case 19: { rnd_off = 40289;   rnd_offd = 40300; /*answer*/ break; }
    }
}

//Level 4
if (room == rm_ro_lvl4) || (room == rm_ro_lvl4_1) || (room == rm_ro_lvl4_2) || (room == rm_ro_lvl4_3) || (room == rm_ro_lvl4_4)
{
rnd_ro1 = obj_txtbox_ro.rnd_ro;
rnd_offa = 0; rnd_offb = 0; rnd_offc = 0; rnd_offd = 0;
    switch (rnd_ro1) 
    {
        case 0: { rnd_off = 160718;   rnd_offa = 200000; /*answer*/ break; }
        case 1: { rnd_off = 339602;   rnd_offb = 340000; /*answer*/ break; }
        case 2: { rnd_off = 394883;   rnd_offd = 390000; /*answer*/ break; }
        case 3: { rnd_off = 164312;   rnd_offc = 164000; /*answer*/ break; }
        case 4: { rnd_off = 347906;   rnd_offd = 348000; /*answer*/ break; }
        case 5: { rnd_off = 336222;   rnd_offa = 336000; /*answer*/ break; }
        case 6: { rnd_off = 333088;   rnd_offb = 330000; /*answer*/ break; }
        case 7: { rnd_off = 311401;   rnd_offc = 310000; /*answer*/ break; }
        case 8: { rnd_off = 376823;   rnd_offc = 380000; /*answer*/ break; }
        case 9: { rnd_off = 445079;   rnd_offa = 450000; /*answer*/  break; }
        case 10: { rnd_off = 476246;   rnd_offc = 480000; /*answer*/ break; }
        case 11: { rnd_off = 455600;   rnd_offa = 455600; /*answer*/ break; }
        case 12: { rnd_off = 385600;   rnd_offa = 385600; /*answer*/ break; }
        case 13: { rnd_off = 137600;   rnd_offb = 137600; /*answer*/ break; }
        case 14: { rnd_off = 129200;   rnd_offc = 129200; /*answer*/ break; }
        case 15: { rnd_off = 768000;   rnd_offa = 770000; /*answer*/ break; }
        case 16: { rnd_off = 115140;   rnd_offa = 100000; /*answer*/ break; }
        case 17: { rnd_off = 297392;   rnd_offa = 300000; /*answer*/ break; }
        case 18: { rnd_off = 358512;   rnd_offc = 358512; /*answer*/ break; }
        case 19: { rnd_off = 141946;   rnd_offa = 141946; /*answer*/ break; }
    }
}

//Level 5
if (room == rm_ro_lvl5) || (room == rm_ro_lvl5_1) || (room == rm_ro_lvl5_2) || (room == rm_ro_lvl5_3) || (room == rm_ro_lvl5_4)
{
rnd_ro1 = obj_txtbox_ro.rnd_ro;
rnd_offa = 0; rnd_offb = 0; rnd_offc = 0; rnd_offd = 0;
    switch (rnd_ro1) 
    {
        case 0: { rnd_off = 152678;   rnd_offa = 200000; /*answer*/ break; }
        case 1: { rnd_off = 214563;   rnd_offb = 200000; /*answer*/ break; }
        case 2: { rnd_off = 13097564;   rnd_offd = 13000000; /*answer*/ break; }
        case 3: { rnd_off = 4509873;   rnd_offc = 4500000; /*answer*/ break; }
        case 4: { rnd_off = 6837145;   rnd_offb = 7000000; /*answer*/ break; }
        case 5: { rnd_off = 3501796;    rnd_offb = 3500000; /*answer*/ break; }
        case 6: { rnd_off = 8724625;    rnd_offa = 9000000; /*answer*/ break; }
        case 7: { rnd_off = 28356721;    rnd_offd = 28000000; /*answer*/ break; }
        case 8: { rnd_off = 5098123;   rnd_offd = 5000000; /*answer*/ break; }
        case 9: { rnd_off = 29965954; rnd_offa = 30000000; /*correct*/ break; }
        case 10: { rnd_off = 45092432;   rnd_offa = 45000000; /*correct*/ break;}
        case 11: { rnd_off = 432783;   rnd_offa = 400000; /*correct*/ break; }
        case 12: { rnd_off = 234219;   rnd_offb = 200000; /*correct*/ break; }
        case 13: { rnd_off = 4087345;   rnd_offc = 4000000; /*correct*/ break; }
        case 14: { rnd_off = 730823;   rnd_offa = 700000; /*correct*/ break; }
        case 15: { rnd_off = 3532678;   rnd_offa = 4000000; /*correct*/ break; }
        case 16: { rnd_off = 567345;   rnd_offb = 600000; /*correct*/ break; }
        case 17: { rnd_off = 823251;    rnd_offb = 800000; /*correct*/ break; }
        case 18: { rnd_off = 47656228;   rnd_offa = 48000000; /*correct*/  break; }
        case 19: { rnd_off = 1656228;    rnd_offa = 2000000; /*correct*/ break; }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//START Words to Numbers
//Level 1 - Words to Numbers
lives -= 1;
if (room == rm_w2n_lvl1) || (room == rm_w2n_lvl1_1) 
|| (room == rm_w2n_lvl1_2) || (room == rm_w2n_lvl1_3)
{
    if (lives = 0) 
    { 
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl1_1);
    }

}

//Level 2
if (room == rm_w2n_lvl2) || (room == rm_w2n_lvl2_1) 
|| (room == rm_w2n_lvl2_2) || (room == rm_w2n_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl2_1);
    }
}

//Level 3
if (room == rm_w2n_lvl3) || (room == rm_w2n_lvl3_1) 
|| (room == rm_w2n_lvl3_2) || (room == rm_w2n_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl3_1);
    }

}

//Level 4
if (room == rm_w2n_lvl4) || (room == rm_w2n_lvl4_1) 
|| (room == rm_w2n_lvl4_2) || (room == rm_w2n_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl4_1);
    }
}

//Level 5
if (room == rm_w2n_lvl5) || (room == rm_w2n_lvl5_1) 
|| (room == rm_w2n_lvl5_2) || (room == rm_w2n_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl1_1);
    }
}
//END Words to Numbers
//---------------------//
//START Numbers to Words
//Level 1
if (room == rm_n2w_lvl1) || (room == rm_n2w_lvl1_1) 
|| (room == rm_n2w_lvl1_2) || (room == rm_n2w_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_n2w_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl1_1);
    }
}

//Level 2
if (room == rm_n2w_lvl2) || (room == rm_n2w_lvl2_1) 
|| (room == rm_n2w_lvl2_2) || (room == rm_n2w_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_n2w_lvl2_4)
{
    if (lives = 0) 
    {
    room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl2_1);
    }
}

//Level 3
if (room == rm_n2w_lvl3) || (room == rm_n2w_lvl3_1) 
|| (room == rm_n2w_lvl3_2) || (room == rm_n2w_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_n2w_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl3_1);
    }

}

//Level 4
if (room == rm_n2w_lvl4) || (room == rm_n2w_lvl4_1) 
|| (room == rm_n2w_lvl4_2) || (room == rm_n2w_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_n2w_lvl4_4)
{   
    if (lives = 0) 
    {
        global.lesson = "n2w";
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl4_1);
    }
    
}

//Level 5
if (room == rm_n2w_lvl5) || (room == rm_n2w_lvl5_1) 
|| (room == rm_n2w_lvl5_2) || (room == rm_n2w_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_n2w_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl5_1);
    }
    
}
//END Numbers to Words
//--------------------//
//START Place Value
if (room == rm_pv_lvl1) || (room == rm_pv_lvl1_1) 
|| (room == rm_pv_lvl1_2) || (room == rm_pv_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_pv_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl1_1);
    }
}

//Level 2
if (room == rm_pv_lvl2) || (room == rm_pv_lvl2_1) 
|| (room == rm_pv_lvl2_2) || (room == rm_pv_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_pv_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl2_1);
    }
}

//Level 3
if (room == rm_pv_lvl3) || (room == rm_pv_lvl3_1) 
|| (room == rm_pv_lvl3_2) || (room == rm_pv_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_pv_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl3_1);
    }

}

//Level 4
if (room == rm_pv_lvl4) || (room == rm_pv_lvl4_1) 
|| (room == rm_pv_lvl4_2) || (room == rm_pv_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_pv_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl4_1);
    }
    
}

//Level 5
if (room == rm_pv_lvl5) || (room == rm_pv_lvl5_1) 
|| (room == rm_pv_lvl5_2) || (room == rm_pv_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_pv_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl5_1);
    }
    
}
//END Place Value
//---------------//
//START Round Off
if (room == rm_ro_lvl1) || (room == rm_ro_lvl1_1) 
|| (room == rm_ro_lvl1_2) || (room == rm_ro_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_ro_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl1_1);
    }
}

//Level 2
if (room == rm_ro_lvl2) || (room == rm_ro_lvl2_1) 
|| (room == rm_ro_lvl2_2) || (room == rm_ro_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_ro_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl2_1);
    }
}

//Level 3
if (room == rm_ro_lvl3) || (room == rm_ro_lvl3_1) 
|| (room == rm_ro_lvl3_2) || (room == rm_ro_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_ro_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl3_1);
    }

}

//Level 4
if (room == rm_ro_lvl4) || (room == rm_ro_lvl4_1) 
|| (room == rm_ro_lvl4_2) || (room == rm_ro_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_ro_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl4_1);
    }
    
}

//Level 5
if (room == rm_ro_lvl5) || (room == rm_ro_lvl5_1) 
|| (room == rm_ro_lvl5_2) || (room == rm_ro_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_ro_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl5_1);
    }
    
}
//END round off
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0
image_index=19;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (image_index = 19) {
draw_self();
//WORDS TO NUMBERS
//LVL 1
//draw_text(room_width/2,room_height/2, "The correct#answer is");

if (room == rm_w2n_lvl1) || (room == rm_w2n_lvl1_1) 
|| (room == rm_w2n_lvl1_2) || (room == rm_w2n_lvl1_3) || (room == rm_w2n_lvl1_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2-100,room_height/2-3, obj_w2n_randy.w2n_1_1);
draw_set_color(c_white);
draw_text(room_width/2-100,room_height/2, obj_w2n_randy.w2n_1_1);
}

///LVL 2
if (room == rm_w2n_lvl2) || (room == rm_w2n_lvl2_1) 
|| (room == rm_w2n_lvl2_2) || (room == rm_w2n_lvl2_3) || (room == rm_w2n_lvl2_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2-50,room_height/2-3, obj_w2n_randy.w2n_2_1);
draw_set_color(c_white);
draw_text(room_width/2-50,room_height/2, obj_w2n_randy.w2n_2_1);
}

//LVL 3
if (room == rm_w2n_lvl3) || (room == rm_w2n_lvl3_1) 
|| (room == rm_w2n_lvl3_2) || (room == rm_w2n_lvl3_3) || (room == rm_w2n_lvl3_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2-50,room_height/2-3, obj_w2n_randy.w2n_3_1);
draw_set_color(c_white);
draw_text(room_width/2-50,room_height/2, obj_w2n_randy.w2n_3_1);
}

//LVL 4
if (room == rm_w2n_lvl4) || (room == rm_w2n_lvl4_1) 
|| (room == rm_w2n_lvl4_2) || (room == rm_w2n_lvl4_3) || (room == rm_w2n_lvl4_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2-50,room_height/2-3, obj_w2n_randy.w2n_4_1);
draw_set_color(c_white);
draw_text(room_width/2-50,room_height/2, obj_w2n_randy.w2n_4_1);
}

//LVL5
if (room == rm_w2n_lvl5) || (room == rm_w2n_lvl5_1) 
|| (room == rm_w2n_lvl5_2) || (room == rm_w2n_lvl5_3) || (room == rm_w2n_lvl5_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2-50,room_height/2-3, obj_w2n_randy.w2n_5_1);
draw_set_color(c_white);
draw_text(room_width/2-50,room_height/2, obj_w2n_randy.w2n_5_1);
}
//END OF WORDS TO NUMBERS

//START NUMBERS TO WORDS
//LVL 1
//draw_text(room_width/2,room_height/2+50, "The correct answer is");
if (room == rm_n2w_lvl1) || (room == rm_n2w_lvl1_1) 
|| (room == rm_n2w_lvl1_2) || (room == rm_n2w_lvl1_3) || (room == rm_n2w_lvl1_4)
{
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, n2w_a);
draw_text(room_width/2,room_height/2+50-3, n2w_b);
draw_text(room_width/2,room_height/2+50-3, n2w_c);
draw_text(room_width/2,room_height/2+50-3, n2w_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, n2w_a);
draw_text(room_width/2,room_height/2+50, n2w_b);
draw_text(room_width/2,room_height/2+50, n2w_c);
draw_text(room_width/2,room_height/2+50, n2w_d);
}

///LVL 2
if (room == rm_n2w_lvl2) || (room == rm_n2w_lvl2_1) 
|| (room == rm_n2w_lvl2_2) || (room == rm_n2w_lvl2_3) || (room == rm_n2w_lvl2_4)
{
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, n2w_a);
draw_text(room_width/2,room_height/2+50-3, n2w_b);
draw_text(room_width/2,room_height/2+50-3, n2w_c);
draw_text(room_width/2,room_height/2+50-3, n2w_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, n2w_a);
draw_text(room_width/2,room_height/2+50, n2w_b);
draw_text(room_width/2,room_height/2+50, n2w_c);
draw_text(room_width/2,room_height/2+50, n2w_d);
}

//LVL 3
if (room == rm_n2w_lvl3) || (room == rm_n2w_lvl3_1) 
|| (room == rm_n2w_lvl3_2) || (room == rm_n2w_lvl3_3) || (room == rm_n2w_lvl3_4)
{
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, n2w_a);
draw_text(room_width/2,room_height/2+50-3, n2w_b);
draw_text(room_width/2,room_height/2+50-3, n2w_c);
draw_text(room_width/2,room_height/2+50-3, n2w_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, n2w_a);
draw_text(room_width/2,room_height/2+50, n2w_b);
draw_text(room_width/2,room_height/2+50, n2w_c);
draw_text(room_width/2,room_height/2+50, n2w_d);
}

//LVL 4
if (room == rm_n2w_lvl4) || (room == rm_n2w_lvl4_1) 
|| (room == rm_n2w_lvl4_2) || (room == rm_n2w_lvl4_3) || (room == rm_n2w_lvl4_4)
{
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, n2w_a);
draw_text(room_width/2,room_height/2+50-3, n2w_b);
draw_text(room_width/2,room_height/2+50-3, n2w_c);
draw_text(room_width/2,room_height/2+50-3, n2w_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, n2w_a);
draw_text(room_width/2,room_height/2+50, n2w_b);
draw_text(room_width/2,room_height/2+50, n2w_c);
draw_text(room_width/2,room_height/2+50, n2w_d);
}

//LVL5
if (room == rm_n2w_lvl5) || (room == rm_n2w_lvl5_1) 
|| (room == rm_n2w_lvl5_2) || (room == rm_n2w_lvl5_3) || (room == rm_n2w_lvl5_4)
{
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, n2w_a);
draw_text(room_width/2,room_height/2+50-3, n2w_b);
draw_text(room_width/2,room_height/2+50-3, n2w_c);
draw_text(room_width/2,room_height/2+50-3, n2w_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, n2w_a);
draw_text(room_width/2,room_height/2+50, n2w_b);
draw_text(room_width/2,room_height/2+50, n2w_c);
draw_text(room_width/2,room_height/2+50, n2w_d);
}
//END NUMBERS TO WORDS

//Place Value
//LVL 1
if (room == rm_pv_lvl1) || (room == rm_pv_lvl1_1) 
|| (room == rm_pv_lvl1_2) || (room == rm_pv_lvl1_3) || (room == rm_pv_lvl1_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, pv_a);
draw_text(room_width/2,room_height/2+50-3, pv_b);
draw_text(room_width/2,room_height/2+50-3, pv_c);
draw_text(room_width/2,room_height/2+50-3, pv_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, pv_a);
draw_text(room_width/2,room_height/2+50, pv_b);
draw_text(room_width/2,room_height/2+50, pv_c);
draw_text(room_width/2,room_height/2+50, pv_d);
}

///LVL 2
if (room == rm_pv_lvl2) || (room == rm_pv_lvl2_1) 
|| (room == rm_pv_lvl2_2) || (room == rm_pv_lvl2_3) || (room == rm_pv_lvl2_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, pv_a);
draw_text(room_width/2,room_height/2+50-3, pv_b);
draw_text(room_width/2,room_height/2+50-3, pv_c);
draw_text(room_width/2,room_height/2+50-3, pv_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, pv_a);
draw_text(room_width/2,room_height/2+50, pv_b);
draw_text(room_width/2,room_height/2+50, pv_c);
draw_text(room_width/2,room_height/2+50, pv_d);
}

//LVL 3
if (room == rm_pv_lvl3) || (room == rm_pv_lvl3_1) 
|| (room == rm_pv_lvl3_2) || (room == rm_pv_lvl3_3) || (room == rm_pv_lvl3_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, pv_a);
draw_text(room_width/2,room_height/2+50-3, pv_b);
draw_text(room_width/2,room_height/2+50-3, pv_c);
draw_text(room_width/2,room_height/2+50-3, pv_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, pv_a);
draw_text(room_width/2,room_height/2+50, pv_b);
draw_text(room_width/2,room_height/2+50, pv_c);
draw_text(room_width/2,room_height/2+50, pv_d);
}

//LVL 4
if (room == rm_pv_lvl4) || (room == rm_pv_lvl4_1) 
|| (room == rm_pv_lvl4_2) || (room == rm_pv_lvl4_3) || (room == rm_pv_lvl4_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, pv_a);
draw_text(room_width/2,room_height/2+50-3, pv_b);
draw_text(room_width/2,room_height/2+50-3, pv_c);
draw_text(room_width/2,room_height/2+50-3, pv_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, pv_a);
draw_text(room_width/2,room_height/2+50, pv_b);
draw_text(room_width/2,room_height/2+50, pv_c);
draw_text(room_width/2,room_height/2+50, pv_d);
}

//LVL5
if (room == rm_pv_lvl5) || (room == rm_pv_lvl5_1) 
|| (room == rm_pv_lvl5_2) || (room == rm_pv_lvl5_3) || (room == rm_pv_lvl5_4)
{
draw_set_font(f_bk_36);
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, pv_a);
draw_text(room_width/2,room_height/2+50-3, pv_b);
draw_text(room_width/2,room_height/2+50-3, pv_c);
draw_text(room_width/2,room_height/2+50-3, pv_d);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, pv_a);
draw_text(room_width/2,room_height/2+50, pv_b);
draw_text(room_width/2,room_height/2+50, pv_c);
draw_text(room_width/2,room_height/2+50, pv_d);
}

//END PLACE VALUE

//START ROUND OFF
if (room == rm_ro_lvl1) || (room == rm_ro_lvl1_1) 
|| (room == rm_ro_lvl1_2) || (room == rm_ro_lvl1_3) || (room == rm_ro_lvl1_4)
{
    draw_set_font(f_bk_36);
    if (rnd_offa != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offa);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offa);
    }
    if (rnd_offb != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offb);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offb);
    }
    if (rnd_offc != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offc);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offc);
    }
    if (rnd_offd != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offd);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offd);
    }
}

///LVL 2
if (room == rm_ro_lvl2) || (room == rm_ro_lvl2_1) 
|| (room == rm_ro_lvl2_2) || (room == rm_ro_lvl2_3) || (room == rm_ro_lvl2_4)
{
    draw_set_font(f_bk_36);
    if (rnd_offa != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offa);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offa);
    }
    if (rnd_offb != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offb);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offb);
    }
    if (rnd_offc != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offc);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offc);
    }
    if (rnd_offd != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offd);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offd);
    }
}

//LVL 3
if (room == rm_ro_lvl3) || (room == rm_ro_lvl3_1) 
|| (room == rm_ro_lvl3_2) || (room == rm_ro_lvl3_3) || (room == rm_ro_lvl3_4)
{
    draw_set_font(f_bk_36);
    if (rnd_offa != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offa);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offa);
    }
    if (rnd_offb != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offb);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offb);
    }
    if (rnd_offc != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offc);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offc);
    }
    if (rnd_offd != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offd);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offd);
    }
}

//LVL 4
if (room == rm_ro_lvl4) || (room == rm_ro_lvl4_1) 
|| (room == rm_ro_lvl4_2) || (room == rm_ro_lvl4_3) || (room == rm_ro_lvl4_4)
{
    draw_set_font(f_bk_36);
    if (rnd_offa != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offa);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offa);
    }
    if (rnd_offb != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offb);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offb);
    }
    if (rnd_offc != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offc);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offc);
    }
    if (rnd_offd != 0){
    draw_set_color(c_black);
    draw_text(room_width/2,room_height/2+50-3, rnd_offd);
    draw_set_color(c_white);
    draw_text(room_width/2,room_height/2+50, rnd_offd);
    }
}

//LVL5
if (room == rm_ro_lvl5) || (room == rm_ro_lvl5_1) 
|| (room == rm_ro_lvl5_2) || (room == rm_ro_lvl5_3) || (room == rm_ro_lvl5_4)
{
draw_set_font(f_bk_36);
if (rnd_offa != 0){
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, rnd_offa);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, rnd_offa);
}
if (rnd_offb != 0){
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, rnd_offb);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, rnd_offb);
}
if (rnd_offc != 0){
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, rnd_offc);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, rnd_offc);
}
if (rnd_offd != 0){
draw_set_color(c_black);
draw_text(room_width/2,room_height/2+50-3, rnd_offd);
draw_set_color(c_white);
draw_text(room_width/2,room_height/2+50, rnd_offd);
}
}
//END ROUND OFF//
}

//PReSS ANY KEY
//
//draw_text(room_width/2,room_height/2+250, "Press any key to continue");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//START Words to Numbers
//Level 1 - Words to Numbers
lives -= 1;
if (room == rm_w2n_lvl1) || (room == rm_w2n_lvl1_1) 
|| (room == rm_w2n_lvl1_2) || (room == rm_w2n_lvl1_3)
{
    if (lives = 0) 
    { 
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl1_1);
    }

}

//Level 2
if (room == rm_w2n_lvl2) || (room == rm_w2n_lvl2_1) 
|| (room == rm_w2n_lvl2_2) || (room == rm_w2n_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl2_1);
    }
}

//Level 3
if (room == rm_w2n_lvl3) || (room == rm_w2n_lvl3_1) 
|| (room == rm_w2n_lvl3_2) || (room == rm_w2n_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl3_1);
    }

}

//Level 4
if (room == rm_w2n_lvl4) || (room == rm_w2n_lvl4_1) 
|| (room == rm_w2n_lvl4_2) || (room == rm_w2n_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl4_1);
    }
}

//Level 5
if (room == rm_w2n_lvl5) || (room == rm_w2n_lvl5_1) 
|| (room == rm_w2n_lvl5_2) || (room == rm_w2n_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_w2n_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_w2n_lvl1_1);
    }
}
//END Words to Numbers
//---------------------//
//START Numbers to Words
//Level 1
if (room == rm_n2w_lvl1) || (room == rm_n2w_lvl1_1) 
|| (room == rm_n2w_lvl1_2) || (room == rm_n2w_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_n2w_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl1_1);
    }
}

//Level 2
if (room == rm_n2w_lvl2) || (room == rm_n2w_lvl2_1) 
|| (room == rm_n2w_lvl2_2) || (room == rm_n2w_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_n2w_lvl2_4)
{
    if (lives = 0) 
    {
    room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl2_1);
    }
}

//Level 3
if (room == rm_n2w_lvl3) || (room == rm_n2w_lvl3_1) 
|| (room == rm_n2w_lvl3_2) || (room == rm_n2w_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_n2w_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl3_1);
    }

}

//Level 4
if (room == rm_n2w_lvl4) || (room == rm_n2w_lvl4_1) 
|| (room == rm_n2w_lvl4_2) || (room == rm_n2w_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_n2w_lvl4_4)
{   
    if (lives = 0) 
    {
        global.lesson = "n2w";
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl4_1);
    }
    
}

//Level 5
if (room == rm_n2w_lvl5) || (room == rm_n2w_lvl5_1) 
|| (room == rm_n2w_lvl5_2) || (room == rm_n2w_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_n2w_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_n2w_lvl5_1);
    }
    
}
//END Numbers to Words
//--------------------//
//START Place Value
if (room == rm_pv_lvl1) || (room == rm_pv_lvl1_1) 
|| (room == rm_pv_lvl1_2) || (room == rm_pv_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_pv_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl1_1);
    }
}

//Level 2
if (room == rm_pv_lvl2) || (room == rm_pv_lvl2_1) 
|| (room == rm_pv_lvl2_2) || (room == rm_pv_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_pv_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl2_1);
    }
}

//Level 3
if (room == rm_pv_lvl3) || (room == rm_pv_lvl3_1) 
|| (room == rm_pv_lvl3_2) || (room == rm_pv_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_pv_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl3_1);
    }

}

//Level 4
if (room == rm_pv_lvl4) || (room == rm_pv_lvl4_1) 
|| (room == rm_pv_lvl4_2) || (room == rm_pv_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_pv_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl4_1);
    }
    
}

//Level 5
if (room == rm_pv_lvl5) || (room == rm_pv_lvl5_1) 
|| (room == rm_pv_lvl5_2) || (room == rm_pv_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_pv_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_pv_lvl5_1);
    }
    
}
//END Place Value
//---------------//
//START Round Off
if (room == rm_ro_lvl1) || (room == rm_ro_lvl1_1) 
|| (room == rm_ro_lvl1_2) || (room == rm_ro_lvl1_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_ro_lvl1_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl1_1);
    }
}

//Level 2
if (room == rm_ro_lvl2) || (room == rm_ro_lvl2_1) 
|| (room == rm_ro_lvl2_2) || (room == rm_ro_lvl2_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
}
else if (room == rm_ro_lvl2_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl2_1);
    }
}

//Level 3
if (room == rm_ro_lvl3) || (room == rm_ro_lvl3_1) 
|| (room == rm_ro_lvl3_2) || (room == rm_ro_lvl3_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }

}
else if (room == rm_ro_lvl3_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl3_1);
    }

}

//Level 4
if (room == rm_ro_lvl4) || (room == rm_ro_lvl4_1) 
|| (room == rm_ro_lvl4_2) || (room == rm_ro_lvl4_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_ro_lvl4_4)
{   
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl4_1);
    }
    
}

//Level 5
if (room == rm_ro_lvl5) || (room == rm_ro_lvl5_1) 
|| (room == rm_ro_lvl5_2) || (room == rm_ro_lvl5_3)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5)
    {
        room_goto_next();
    }
    
}
else if (room == rm_ro_lvl5_4)
{
    if (lives = 0) 
    {
        room_goto(room_gameover);
    }
    else if (score != 5){
    room_goto(rm_ro_lvl5_1);
    }
    
}
//END round off
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
