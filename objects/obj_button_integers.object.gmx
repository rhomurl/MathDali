<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_submit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Random words to number

//Setting variables
string1 = "";

///Generating random number
gen_rn = irandom(5);
//If user at room ...

//LVL 1 - Words to Number
//LVL 1.1

    w2n_1_1 = 0;
    switch(gen_rn){
    case 0: { string1 ="eighty-seven"; w2n_1_1 =87; break; }
    case 1: { string1 ="sixty-four"; w2n_1_1 = 64; break; }
    case 2: { string1 ="eighteen"; w2n_1_1 =18; break; }
    case 3: { string1 ="forty-three"; w2n_1_1 =43; break; }
    case 4: { string1 ="eighty"; w2n_1_1 = 80; break; }
    case 5: { string1 ="ninety-six"; w2n_1_1 = 96; break; }
    default:{ string1 = ""; w2n_1_1 = 0; break; }
    }
    global.w2n_1_1 = real(w2n_1_1);

    
//End of Code Words to Numbers LVL 1


 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(f_question);
stringq = string_upper(string1);
draw_text(495,180,stringq);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>answer = real(obj_textbox.txt);
// - Checks the user's answer - //

 if(answer == global.w2n_1_1){ instance_create(530,370, obj_correct);  }
 else { instance_create(530,370, obj_incorrect); room_goto(room_menu); }
// if{
  //  room_goto(room_menu); }
/*
//LVL 1.1 - 1.5 - Words to Numbers
if (room == rm_w2n_lvl1){
    if(answer == global.w2n_1_1){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl1_2){
    if(answer == global.w2n_1_2){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl1_3){
    if(answer == global.w2n_1_3){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl1_4){
    if(answer == global.w2n_1_4){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl1_5){
    if(answer == global.w2n_1_5){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}


//LVL 2.1 - 2.5 - Words to Numbers

if (room == rm_w2n_lvl2){
    if(answer == global.w2n_2_1){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl2_2){
    if(answer == global.w2n_2_2){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl2_3){
    if(answer == global.w2n_2_3){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl2_4){
    if(answer == global.w2n_2_4){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl2_5){
    if(answer == global.w2n_2_5){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}


//LVL 3.1 - 3.5 - Words to Numbers
if (room == rm_w2n_lvl3){
    if(answer == global.w2n_3_1){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl3_2){
    if(answer == global.w2n_3_2){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl3_3){
    if(answer == global.w2n_3_3){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl3_4){
    if(answer == global.w2n_3_4){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl3_5){
    if(answer == global.w2n_3_5){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}


//LVL 4.1 - 4.5 - Words to Numbers
if (room == rm_w2n_lvl4){
    if(answer == global.w2n_4_1){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl4_2){
    if(answer == global.w2n_4_2){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl4_3){
    if(answer == global.w2n_4_3){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl4_4){
    if(answer == global.w2n_4_4){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl4_5){
    if(answer == global.w2n_4_5){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}


//LVL 5.1 - 5.5 - Words to Numbers
if (room == rm_w2n_lvl5){
    if(answer == global.w2n_5_1){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl5_2){
    if(answer == global.w2n_5_2){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl5_3){
    if(answer == global.w2n_5_3){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl5_4){
    if(answer == global.w2n_5_4){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
if (room == rm_w2n_lvl5_5){
    if(answer == global.w2n_5_5){ instance_create(530,370, obj_correct); }
    else { instance_create(530,370, obj_incorrect); }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(obj_correct);
instance_deactivate_object(obj_incorrect);
/* if (room == rm_w2n_lvl1)
{
    if(answer == global.w2n_1_1){ room_goto_next(); score +=1;} //Go to nextroom if answer correct
        else{ lives -= 1; }
}

if (room == rm_w2n_lvl1_2)
{
    if(answer == global.w2n_1_2){ room_goto_next(); score +=1;} //Go to nextroom if answer correct
        else{ lives -= 1; }
}

if (room == rm_w2n_lvl1_3)
{
    if(answer == global.w2n_1_3){ room_goto_next(); score +=1;} //Go to nextroom if answer correct
        else{ lives -= 1; }
}

if (room == rm_w2n_lvl1_4)
{
    if(answer == global.w2n_1_4){ room_goto_next(); score +=1;} //Go to nextroom if answer correct
        else{ lives -= 1; }
}

if (room == rm_w2n_lvl1_5)
{
    if(answer == global.w2n_1_5){ room_goto(room_w2n_level); score +=1;} //Go to main menu if answer correct
        else{ lives -= 1; }
}
*/
//if a{ lives -= 1; }
//if(lives == 0){ room_goto(room_w2n_level); }

if(score == 4){
room_goto(room_menu);
}
else {
if(answer == global.w2n_1_1){ 
score +=1;
room_restart(); //Restart room if answer correct
} 
else{ lives -= 1; }
}
global.w2n_1_1 = 0;
keyboard_string = ""; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
